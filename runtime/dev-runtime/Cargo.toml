[package]
name = "dev-runtime"
version = "0.0.2"
description = "Substrate based runtime for Logos development purposes"
authors = ["LogosLabs <https://github.com/logoslabstech>"]
homepage = "https://logoslabs.io/"
repository = "https://github.com/logoslabstech/logos-dev-environment"
license = "Apache-2.0"
edition = "2021"
publish = false

[dependencies]
# Rust packages
parity-scale-codec = { workspace = true, features = ["derive"] }
scale-info =         { workspace = true, features = ["derive", "serde"] }
serde_json =         { workspace = true, features = ["alloc"] }

# Substrate primitives
sp-api =                { workspace = true }
sp-block-builder =      { workspace = true }
sp-core =               { workspace = true }
sp-consensus-aura =     { workspace = true }
sp-consensus-grandpa =  { workspace = true }
sp-genesis-builder =    { workspace = true }
sp-inherents =          { workspace = true }
sp-offchain =           { workspace = true }
sp-runtime =            { workspace = true }
sp-session =            { workspace = true }
sp-std =                { workspace = true }
sp-storage =            { workspace = true }
sp-transaction-pool =   { workspace = true }
sp-version =            { workspace = true }

# Substrate pallets
frame-benchmarking =                          { workspace = true, optional = true }
frame-executive =                             { workspace = true }
frame-support =                               { workspace = true }
frame-system =                                { workspace = true }
frame-system-benchmarking =                   { workspace = true, optional = true }
frame-try-runtime =                           { workspace = true, optional = true }
frame-system-rpc-runtime-api =                { workspace = true }
pallet-aura =                                 { workspace = true }
pallet-assets =                               { workspace = true }
pallet-balances =                             { workspace = true }
pallet-contracts =                            { workspace = true }
pallet-insecure-randomness-collective-flip =  { workspace = true }
pallet-grandpa =                              { workspace = true }
pallet-sudo =                                 { workspace = true }
pallet-timestamp =                            { workspace = true }
pallet-transaction-payment =                  { workspace = true }
pallet-transaction-payment-rpc-runtime-api =  { workspace = true }

[build-dependencies]
substrate-wasm-builder =  { workspace = true, optional = true }

[features]
default = ["std"]
std = [
	"frame-try-runtime?/std",
	"frame-system-benchmarking?/std",
	"frame-benchmarking?/std",
	"parity-scale-codec/std",
	"scale-info/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"frame-try-runtime/std",
	"pallet-aura/std",
	"pallet-assets/std",
	"pallet-balances/std",
	"pallet-contracts/std",
	"pallet-grandpa/std",
	"pallet-sudo/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-consensus-grandpa/std",
	"sp-core/std",
	"sp-inherents/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-std/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"substrate-wasm-builder",
]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-sudo/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]
try-runtime = [
	"frame-try-runtime/try-runtime",
	"frame-executive/try-runtime",
	"frame-system/try-runtime",
	"frame-support/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-grandpa/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
]
